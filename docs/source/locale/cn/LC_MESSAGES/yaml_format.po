# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, DAGU Developers
# This file is distributed under the same license as the DAGU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DAGU \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-09 03:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: cn\n"
"Language-Team: cn <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/yaml_format.rst:4 44d1b3af82184413a2d82c651158bbd9
msgid "Workflow Language (YAML)"
msgstr ""

#: ../../source/yaml_format.rst:10 69a26199290a451c8e5d940d76b58b12
msgid "Basics"
msgstr ""

#: ../../source/yaml_format.rst:13 faf2aa64ce5046e79b7392ff335e415a
msgid "Minimal Example"
msgstr ""

#: ../../source/yaml_format.rst:15 a956175e68274c40885fcad9bc7194e5
msgid "The minimal example of a DAG file is as follows:"
msgstr ""

#: ../../source/yaml_format.rst:30 0e57ab99567643cba8016d3e426c261d
msgid "Working Directory"
msgstr ""

#: ../../source/yaml_format.rst:32 fb2bed9481d948a682233241b5981526
msgid ""
"You can specify the working directory for each step using the ``dir`` "
"field."
msgstr ""

#: ../../source/yaml_format.rst:42 f25b59de55714c1baabdf538f6771bb4
msgid "Code Snippet"
msgstr ""

#: ../../source/yaml_format.rst:44 cf855d6ff7b14f2a901f03d43fee7155
msgid ""
"``script`` field provides a way to run arbitrary snippets of code in any "
"language."
msgstr ""

#: ../../source/yaml_format.rst:62 b7f38b1a765144ff9cb6f97e3946e7c7
msgid "Environment Variables"
msgstr ""

#: ../../source/yaml_format.rst:64 0c553dd0779648abb84cb867628c0b23
msgid ""
"You can define environment variables using the ``env`` field. The "
"environment variables can be accessed by the DAG and its steps."
msgstr ""

#: ../../source/yaml_format.rst:78 f2fe24e3d2f14b239f7cccdce83c2ca4
msgid "Parameters"
msgstr ""

#: ../../source/yaml_format.rst:80 bff3a981f9a242848e11bbd133e0ced2
msgid ""
"You can pass parameters to the DAG and its steps using the ``params`` "
"field. The parameters can be accessed by the steps using ``$1``, ``$2``, "
"and so on."
msgstr ""

#: ../../source/yaml_format.rst:90 196a96090039472db1c4e08c2afbcd16
msgid "Named Parameters"
msgstr ""

#: ../../source/yaml_format.rst:92 d421099654ea4ae59bb2157eb6f005e7
msgid ""
"You can also use named parameters in the ``params`` field. The named "
"parameters can be accessed by the steps using ``${FOO}``, ``${BAR}``, and"
" so on."
msgstr ""

#: ../../source/yaml_format.rst:102 641179f817644d3782d6dba02d159e73
msgid "Conditional Logic"
msgstr ""

#: ../../source/yaml_format.rst:104 552da3208982422c8219b25f2833209d
msgid ""
"Sometimes you have parts of a DAG that you only want to run under certain"
" conditions. You can use the ``preconditions`` field to add conditional "
"branches to your DAG."
msgstr ""

#: ../../source/yaml_format.rst:106 f87c21eec565470d8b7cf2e3c3e7a12a
msgid "For example, the task below only runs on the first date of each month."
msgstr ""

#: ../../source/yaml_format.rst:117 11871abc5cfc4bf785d82bd6b29695c7
msgid ""
"If you want the DAG to continue to the next step regardless of the step's"
" conditional check result, you can use the ``continueOn`` field:"
msgstr ""

#: ../../source/yaml_format.rst:131 90d4c4ca7c864572be081719e7414c8a
msgid "Capture Output"
msgstr ""

#: ../../source/yaml_format.rst:133 22133ba5c0a74cb8a79de0da8e783389
msgid ""
"The ``output`` field can be used to set an environment variable with "
"standard output. Leading and trailing space will be trimmed "
"automatically. The environment variables can be used in subsequent steps."
msgstr ""

#: ../../source/yaml_format.rst:143 e05250deb70b4096bec885e11ab7894c
msgid "Redirect Standard Output and Error"
msgstr ""

#: ../../source/yaml_format.rst:145 bc34ab2b71a24c93af7da2fd916753f4
msgid "The `stdout` field can be used to write standard output to a file."
msgstr ""

#: ../../source/yaml_format.rst:154 08ed428d9ff64038b808a10ba0dfd545
msgid ""
"The `stderr` field allows to redirect stderr to other file without "
"writing to the normal log file."
msgstr ""

#: ../../source/yaml_format.rst:165 b046e40135f440a5b716d3e1dd003765
msgid "Schedule"
msgstr ""

#: ../../source/yaml_format.rst:167 a40831725a5545c4a5da440e7a22d715
msgid "You can use the `schedule` field to schedule a DAG with Cron expression."
msgstr ""

#: ../../source/yaml_format.rst:176 b80eb7c2a7184c99abc96a7d4370f709
msgid "See :ref:`scheduler configuration` for more details."
msgstr ""

#: ../../source/yaml_format.rst:181 e933d37fef034708b07669837ad05ec5
msgid "Docker Image"
msgstr ""

#: ../../source/yaml_format.rst:184 5d5a6e1d48e04a44aa6ae5b6241a03ca
msgid "Execute an Image"
msgstr ""

#: ../../source/yaml_format.rst:186 b59461d7ec2742828e19a32277b27a40
msgid "*Note: It requires Docker daemon running on the host.*"
msgstr ""

#: ../../source/yaml_format.rst:188 f73d1ca175574f03aedb2ab93a6bed19
msgid ""
"The `docker` executor allows us to run Docker containers instead of bare "
"commands. This can be useful for running commands in isolated "
"environments or for reproducibility purposes."
msgstr ""

#: ../../source/yaml_format.rst:190 75545a9171214021abb772cbfe77376c
msgid ""
"In the example below, it pulls and runs `Deno's docker image "
"<https://hub.docker.com/r/denoland/deno>`_ and prints 'Hello World'."
msgstr ""

#: ../../source/yaml_format.rst:203 8b29301bab024db0af8b3b345256fac4
msgid "Example Log output:"
msgstr ""

#: ../../source/yaml_format.rst:208 5dbe65446f654b5a9008809065c63f28
msgid ""
"You can config the Docker container (e.g., `volumes`, `env`, etc) by "
"passing more detailed options."
msgstr ""

#: ../../source/yaml_format.rst:210 7aacbee987df402fb26998fa82fcc314
msgid "For example:"
msgstr ""

#: ../../source/yaml_format.rst:229 bbe73bbf18ae433884926179f4d9af46
msgid "See the Docker's API documentation for all available options."
msgstr ""

#: ../../source/yaml_format.rst:231 bf96b1832cd94b2a88e39f75a0f441bb
msgid ""
"For `container`, see `ContainerConfig "
"<https://pkg.go.dev/github.com/docker/docker/api/types/container#Config>`_."
msgstr ""

#: ../../source/yaml_format.rst:232 3bb593ce434b4341aed28be1f2d2e7fe
msgid ""
"For `host`, see `HostConfig "
"<https://pkg.go.dev/github.com/docker/docker/api/types/container#HostConfig>`_."
msgstr ""

#: ../../source/yaml_format.rst:236 c19328932da14e8a84a17adf1e13efd8
msgid "Use Host's Docker Environment"
msgstr ""

#: ../../source/yaml_format.rst:238 496dc89d6d2c4d7bb11f39d0a156717e
msgid "If you are running `dagu` using a container, you need the setup below."
msgstr ""

#: ../../source/yaml_format.rst:240 89b73515f28940ee8b74bd4986e9d5f6
msgid "Run a `socat` container with the command below."
msgstr ""

#: ../../source/yaml_format.rst:246 d937b263562249ec9193eaedf5738cb1
msgid "Then you can set the `DOCKER_HOST` environment as follows."
msgstr ""

#: ../../source/yaml_format.rst:261 491c9e0efc84437c84a9cd988f996474
msgid ""
"For more details, see `this page <https://forums.docker.com/t/remote-api-"
"with-docker-for-mac-beta/15639/2>`_."
msgstr ""

#: ../../source/yaml_format.rst:264 67057315dab149659de40f2a90a33552
msgid "Advanced"
msgstr ""

#: ../../source/yaml_format.rst:267 e8f7ff1a6ad844098604a0f7644feb0a
msgid "Making HTTP Requests"
msgstr ""

#: ../../source/yaml_format.rst:269 df5b6e3480cd46a39222d59f14b56ac8
msgid ""
"The `http` executor allows us to make an arbitrary HTTP request. This can"
" be useful for interacting with web services or APIs."
msgstr ""

#: ../../source/yaml_format.rst:288 bb99f59ff35e401abf0ae3e338edc9b3
msgid "Sending Email"
msgstr ""

#: ../../source/yaml_format.rst:290 a2885f409f5a4900a5e41b7666de9ebd
msgid ""
"The `mail` executor can be used to send email. This can be useful for "
"sending notifications or alerts."
msgstr ""

#: ../../source/yaml_format.rst:292 ../../source/yaml_format.rst:486
#: ../../source/yaml_format.rst:541 0795fd986aa842d7933a2b9dc3bd627c
#: 3f5428362b5f42718b9feeb9209c90d4 b765aa1528b249a48669da682da6e950
msgid "Example:"
msgstr ""

#: ../../source/yaml_format.rst:327 75bb3a7b42664819ad56420d10a16620
msgid "Command Execution over SSH"
msgstr ""

#: ../../source/yaml_format.rst:329 d46f0ad37405420bbef642b795fa37d8
msgid "The `ssh` executor allows us to execute commands on remote hosts over SSH."
msgstr ""

#: ../../source/yaml_format.rst:345 2101930cceb64ef195a9d59e827bc28e
msgid "Command Substitution"
msgstr ""

#: ../../source/yaml_format.rst:347 0b8612268a1b4f658f7c21f91fb54f5e
msgid ""
"You can use command substitution in field values. I.e., a string enclosed"
" in backquotes (`) is evaluated as a command and replaced with the result"
" of standard output."
msgstr ""

#: ../../source/yaml_format.rst:358 59ffbb5e1fc44ffe8b6384dc001bbe55
msgid "Lifecycle Hooks"
msgstr ""

#: ../../source/yaml_format.rst:360 1deb867c5b404016987105fda23c8baa
msgid ""
"It is often desirable to take action when a specific event happens, for "
"example, when a DAG fails. To achieve this, you can use `handlerOn` "
"fields."
msgstr ""

#: ../../source/yaml_format.rst:374 ffe9ef837208408eb9736e2d5c670a94
msgid "Repeat a Step"
msgstr ""

#: ../../source/yaml_format.rst:376 c78a61e1d0ab48edb55e8128f17b3d17
msgid ""
"If you want a task to repeat execution at regular intervals, you can use "
"the `repeatPolicy` field. If you want to stop the repeating task, you can"
" use the `stop` command to gracefully stop the task."
msgstr ""

#: ../../source/yaml_format.rst:388 af35b1c4aa8149688ff71143ba63e27a
msgid "User Defined Functions"
msgstr ""

#: ../../source/yaml_format.rst:390 889922e2981149dcb7d746904442d8eb
msgid ""
"You can define functions in the DAG file and call them in steps. The "
"``params`` field is required for functions. The ``args`` field is used to"
" pass arguments to functions. The arguments can be command substitutions "
"or environment variables."
msgstr ""

#: ../../source/yaml_format.rst:408 787d166aceab489b8273937b0ab615d2
msgid "JSON Processing"
msgstr ""

#: ../../source/yaml_format.rst:411 ec5ce566739847f0803f5bc397a2bd91
msgid "Executing jq Command"
msgstr ""

#: ../../source/yaml_format.rst:413 05a7bb3a23fa4462b58a3bcf26905f87
msgid ""
"The `jq` executor can be used to transform, query, and format JSON. This "
"can be useful for working with JSON data in pipelines or for data "
"processing."
msgstr ""

#: ../../source/yaml_format.rst:424 ../../source/yaml_format.rst:443
#: 3a90ed4ade184a20820300ca14272ea2 bbbb4b30e20e4c5b8494f25f6a5f0166
msgid "**Output:**"
msgstr ""

#: ../../source/yaml_format.rst:433 4786072f10e34f93b2a7ed0b52d0a5a8
msgid "Formatting JSON"
msgstr ""

#: ../../source/yaml_format.rst:457 e4bbf635b1a54682832b33c0e5bac801
msgid "All Available Fields"
msgstr ""

#: ../../source/yaml_format.rst:460 af6d4ab4f7274869a65b2875c9757abe
msgid "DAG"
msgstr ""

#: ../../source/yaml_format.rst:462 3779d060d30542e49d773c736ec2ef56
msgid ""
"This section provides a comprehensive list of available fields that can "
"be used to configure DAGs and their steps in detail. Each field serves a "
"specific purpose, enabling granular control over how the DAG runs. The "
"fields include:"
msgstr ""

#: ../../source/yaml_format.rst:464 9be6e4aabdf540348f9639a08eb7b328
msgid ""
"``name``: The name of the DAG, which is optional. The default name is the"
" name of the file."
msgstr ""

#: ../../source/yaml_format.rst:465 59cbbf03991f4bc6885f1b08ea1ebf86
msgid "``description``: A brief description of the DAG."
msgstr ""

#: ../../source/yaml_format.rst:466 0d21fc8810644b0e8a2a9270af82d292
msgid "``schedule``: The execution schedule of the DAG in Cron expression format."
msgstr ""

#: ../../source/yaml_format.rst:467 b69f282d094047f5bf608e0c79189a54
msgid "``group``: The group name to organize DAGs, which is optional."
msgstr ""

#: ../../source/yaml_format.rst:468 c05dc4022e9d4bac9766c3aa9d973bf9
msgid ""
"``tags``: Free tags that can be used to categorize DAGs, separated by "
"commas."
msgstr ""

#: ../../source/yaml_format.rst:469 03fc7566d45541b8b616f84ab427116e
msgid ""
"``env``: Environment variables that can be accessed by the DAG and its "
"steps."
msgstr ""

#: ../../source/yaml_format.rst:470 0bb39c8f389848b08a48bc3d8638c509
msgid ""
"``logDir``: The directory where the standard output is written. The "
"default value is ``${DAGU_HOME}/logs/dags``."
msgstr ""

#: ../../source/yaml_format.rst:471 84c63d4812854612a0005df5046aff86
msgid ""
"``restartWaitSec``: The number of seconds to wait after the DAG process "
"stops before restarting it."
msgstr ""

#: ../../source/yaml_format.rst:472 337cb812e0f042bdaff3fcde598a18e6
msgid ""
"``histRetentionDays``: The number of days to retain execution history "
"(not for log files)."
msgstr ""

#: ../../source/yaml_format.rst:473 f7d6eb1ab7b7483d8aedff04ea00e7c2
msgid "``delaySec``: The interval time in seconds between steps."
msgstr ""

#: ../../source/yaml_format.rst:474 742ed2cb7f384af2bbe836c77e44bd4f
msgid "``maxActiveRuns``: The maximum number of parallel running steps."
msgstr ""

#: ../../source/yaml_format.rst:475 88261082ba414351b75393664f594971
msgid ""
"``params``: The default parameters that can be referred to by ``$1``, "
"``$2``, and so on."
msgstr ""

#: ../../source/yaml_format.rst:476 2c279bac8b0f4b6a871c7f8d80aa6b25
msgid ""
"``preconditions``: The conditions that must be met before a DAG or step "
"can run."
msgstr ""

#: ../../source/yaml_format.rst:477 fa94ab4486ad4972ae4dbde600665367
msgid ""
"``mailOn``: Whether to send an email notification when a DAG or step "
"fails or succeeds."
msgstr ""

#: ../../source/yaml_format.rst:478 1ed372546460490e9800d54a7fe19175
msgid ""
"``MaxCleanUpTimeSec``: The maximum time to wait after sending a TERM "
"signal to running steps before killing them."
msgstr ""

#: ../../source/yaml_format.rst:479 40c0aee96d66476193109599d901ee14
msgid ""
"``handlerOn``: The command to execute when a DAG or step succeeds, fails,"
" cancels, or exits."
msgstr ""

#: ../../source/yaml_format.rst:480 e0ef1b3266db4c8c97a04a4b08b74434
msgid "``steps``: A list of steps to execute in the DAG."
msgstr ""

#: ../../source/yaml_format.rst:482 8993958642c54df8af8f8feb63a61306
msgid ""
"In addition, a global configuration file, ``$DAGU_HOME/config.yaml``, can"
" be used to gather common settings, such as ``logDir`` or ``env``."
msgstr ""

#: ../../source/yaml_format.rst:484 bee44595f6004cc0b34f4e2bbfdb1217
msgid ""
"Note: If ``DAGU_HOME`` environment variable is not set, the default path "
"is ``$HOME/.dagu/config.yaml``."
msgstr ""

#: ../../source/yaml_format.rst:522 f7dc490d92784e0695de6deee2b84465
msgid "Step"
msgstr ""

#: ../../source/yaml_format.rst:524 a7449045ac364e7bb53762914e2cc41b
msgid "Each step can have its own set of configurations, including:"
msgstr ""

#: ../../source/yaml_format.rst:526 37699dd776fc462b91c10bcc715d6db2
msgid "``name``: The name of the step."
msgstr ""

#: ../../source/yaml_format.rst:527 37d95419feb74bba9b44d114abfca451
msgid "``description``: A brief description of the step."
msgstr ""

#: ../../source/yaml_format.rst:528 11437925cae84ae7959bf55f19475b37
msgid "``dir``: The working directory for the step."
msgstr ""

#: ../../source/yaml_format.rst:529 227d1eff198e403c99ee0997a176805f
msgid "``command``: The command and parameters to execute."
msgstr ""

#: ../../source/yaml_format.rst:530 f3d83b2f56dc4b2aa20a169155b367e1
msgid "``stdout``: The file to which the standard output is written."
msgstr ""

#: ../../source/yaml_format.rst:531 6c222e84320c4210bc451e5d0e957bec
msgid "``output``: The variable to which the result is written."
msgstr ""

#: ../../source/yaml_format.rst:532 ec0691516ce446b3b9577ced7a2db83a
msgid "``script``: The script to execute."
msgstr ""

#: ../../source/yaml_format.rst:533 5b10bc1307ed422986a36e157502c6e0
msgid ""
"``signalOnStop``: The signal name (e.g., ``SIGINT``) to be sent when the "
"process is stopped."
msgstr ""

#: ../../source/yaml_format.rst:534 5850ba2715204452b85bb4759fe9663a
msgid ""
"``mailOn``: Whether to send an email notification when the step fails or "
"succeeds."
msgstr ""

#: ../../source/yaml_format.rst:535 b6a759f94dcf4bf8b9f2a11d540af7eb
msgid ""
"``continueOn``: Whether to continue to the next step, regardless of "
"whether the step failed or not or the preconditions are met or not."
msgstr ""

#: ../../source/yaml_format.rst:536 918b6469840b41a5b879041300e207cd
msgid "``retryPolicy``: The retry policy for the step."
msgstr ""

#: ../../source/yaml_format.rst:537 8fb97b6a88b549e793b3dd716ea6d794
msgid "``repeatPolicy``: The repeat policy for the step."
msgstr ""

#: ../../source/yaml_format.rst:538 a9a05cca86014010a19a99279676223c
msgid "``preconditions``: The conditions that must be met before a step can run."
msgstr ""

#: ../../source/yaml_format.rst:539 a582f742e61843ea8479f601b2231d9e
msgid "``depends``: The step depends on the other step."
msgstr ""

